import React, { useEffect, useRef, useState } from 'react';
import * as d3 from 'd3';
import './App.css';

export default function Map(props: any) {
    const refDrawing = useRef<HTMLDivElement>(null);
    //const [points, setpoints] = useState<string[]>(["0,"]);

    const { data } = props;

    var bounds = {
        "minLon": -81.267555236816,
        "maxLon": -81.261039733887,
        "maxLat": 28.979709625244,
        "minLat": 28.977783203125
    }

    var dimensions = {
        width: 400,
        height: 200
    }

    function getX(x: number) {
        var position = (x - bounds.minLon) / (bounds.maxLon - bounds.minLon);
        return dimensions.width * position;
    }

    function getY(y: number) {
        var position = (y - bounds.minLat) / (bounds.maxLat - bounds.minLat);
        return dimensions.height * position;
    }

    let listPoints = [];

    for (let i = 0; i < data.length; i++) {
        const point = {x: getX(data[i].latitude), y: getY(data[i].longitude)}

        listPoints.push(point);
        //setpoints([...points!,point.x+","+point.y]);

    }

    return (
    <div>
        <svg height="200" width="500">
            <polyline className="canvas" points={listPoints!.join(" ")}/>
        </svg>
    </div>)
}